{"ast":null,"code":"var _jsxFileName = \"D:\\\\Manabendra'\\\\Myproject\\\\Frontend\\\\frontend\\\\src\\\\screens\\\\ResetPasswordScreen.js\",\n  _s = $RefreshSig$();\nimport Axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPasswordScreen() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  useEffect(() => {\n    if (userInfo || !token) {\n      navigate('/');\n    }\n  }, [navigate, userInfo, token]);\n  const submitHandler = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match');\n      return;\n    }\n    try {\n      await Axios.post('/api/users/reset-password', {\n        password,\n        token\n      });\n      navigate('/signin');\n      toast.success('Password updated successfully');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordScreen, \"v6eRK9geyJg21ZucMC7uEDklb44=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPasswordScreen;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordScreen\");","map":{"version":3,"names":["Axios","useContext","useEffect","useState","Container","Button","Form","Helmet","useNavigate","useParams","toast","Store","getError","ResetPasswordScreen","navigate","token","password","setPassword","confirmPassword","setConfirmPassword","state","userInfo","submitHandler","e","preventDefault","error","post","success","err","target","value"],"sources":["D:/Manabendra'/Myproject/Frontend/frontend/src/screens/ResetPasswordScreen.js"],"sourcesContent":["import Axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { Store } from '../Store';\r\nimport { getError } from '../utils';\r\n\r\nexport default function ResetPasswordScreen() {\r\n  const navigate = useNavigate();\r\n  const { token } = useParams();\r\n\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  useEffect(() => {\r\n    if (userInfo || !token) {\r\n      navigate('/');\r\n    }\r\n  }, [navigate, userInfo, token]);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      toast.error('Passwords do not match');\r\n      return;\r\n    }\r\n    try {\r\n      await Axios.post('/api/users/reset-password', {\r\n        password,\r\n        token,\r\n      });\r\n      navigate('/signin');\r\n      toast.success('Password updated successfully');\r\n    } catch (err) {\r\n      toast.error(getError(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"small-container\">\r\n      <Helmet>\r\n        <title>Reset Password</title>\r\n      </Helmet>\r\n      <h1 className=\"my-3\">Reset Password</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <div className=\"mb-3\">\r\n          <Button type=\"submit\">Reset Password</Button>\r\n        </div>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}