{"ast":null,"code":"var _jsxFileName = \"D:\\\\Manabendra'\\\\Myproject\\\\Frontend\\\\frontend\\\\src\\\\screens\\\\AdminBannerScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BannerItem from '../components/BannerItem';\nimport { Container, Form, Button, Spinner, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminBannerScreen() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newBanner, setNewBanner] = useState({\n    title: '',\n    image: '',\n    active: true,\n    expiryDate: ''\n  });\n  useEffect(() => {\n    const fetchBanners = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('/api/banner');\n        setBanners(data);\n      } catch (err) {\n        setError('Error fetching banners');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBanners();\n  }, []);\n  const toggleBanner = async id => {\n    try {\n      const {\n        data\n      } = await axios.put(`/api/banner/${id}/toggle`);\n      setBanners(banners.map(banner => banner._id === id ? data : banner));\n    } catch (err) {\n      console.error('Error toggling banner:', err);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewBanner({\n      ...newBanner,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await axios.post('/api/banner', newBanner);\n      setBanners([...banners, data]);\n      setNewBanner({\n        title: '',\n        image: '',\n        active: true,\n        expiryDate: ''\n      });\n    } catch (err) {\n      console.error('Error adding banner:', err);\n    }\n  };\n  const styles = {\n    container: {\n      padding: '20px',\n      backgroundColor: '#f9f9f9',\n      borderRadius: '8px',\n      boxShadow: '0 2px 10px rgba(0, 0, 0, 0.1)',\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '10px',\n      marginBottom: '20px'\n    },\n    label: {\n      fontWeight: 'bold'\n    },\n    input: {\n      padding: '8px',\n      borderRadius: '4px',\n      border: '1px solid #ccc',\n      fontSize: '16px'\n    },\n    button: {\n      padding: '10px 15px',\n      backgroundColor: '#007BFF',\n      color: '#fff',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: 'pointer',\n      fontSize: '16px'\n    },\n    bannerList: {\n      marginTop: '20px',\n      borderTop: '1px solid #ccc',\n      paddingTop: '10px'\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading banners...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Banners\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: newBanner.title,\n          onChange: handleChange,\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Image URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"image\",\n          value: newBanner.image,\n          onChange: handleChange,\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Active:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"active\",\n          checked: newBanner.active,\n          onChange: e => setNewBanner({\n            ...newBanner,\n            active: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Expiry Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"expiryDate\",\n          value: newBanner.expiryDate,\n          onChange: handleChange,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Add Banner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.bannerList,\n      children: banners.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No banners available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this) : banners.map(banner => /*#__PURE__*/_jsxDEV(BannerItem, {\n        banner: banner,\n        onToggle: toggleBanner\n      }, banner._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminBannerScreen, \"bsI2Gr/B0LAjwD7ISGNtFboWZsM=\");\n_c = AdminBannerScreen;\nexport default AdminBannerScreen;\nvar _c;\n$RefreshReg$(_c, \"AdminBannerScreen\");","map":{"version":3,"names":["React","useEffect","useState","axios","BannerItem","Container","Form","Button","Spinner","Alert","AdminBannerScreen","loading","setLoading","error","setError","newBanner","setNewBanner","title","image","active","expiryDate","fetchBanners","data","get","setBanners","err","console","toggleBanner","id","put","banners","map","banner","_id","handleChange","e","name","value","target","handleSubmit","preventDefault","post","styles","container","padding","backgroundColor","borderRadius","boxShadow","maxWidth","margin","form","display","flexDirection","gap","marginBottom","label","fontWeight","input","border","fontSize","button","color","cursor","bannerList","marginTop","borderTop","paddingTop","checked","length"],"sources":["D:/Manabendra'/Myproject/Frontend/frontend/src/screens/AdminBannerScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport BannerItem from '../components/BannerItem';\r\nimport { Container, Form, Button, Spinner, Alert } from 'react-bootstrap';\r\n\r\nfunction AdminBannerScreen() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [newBanner, setNewBanner] = useState({\r\n    title: '',\r\n    image: '',\r\n    active: true,\r\n    expiryDate: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchBanners = async () => {\r\n      try {\r\n        const { data } = await axios.get('/api/banner');\r\n        setBanners(data);\r\n      } catch (err) {\r\n        setError('Error fetching banners');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchBanners();\r\n  }, []);\r\n\r\n  const toggleBanner = async (id) => {\r\n    try {\r\n      const { data } = await axios.put(`/api/banner/${id}/toggle`);\r\n      setBanners(banners.map((banner) => (banner._id === id ? data : banner)));\r\n    } catch (err) {\r\n      console.error('Error toggling banner:', err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewBanner({ ...newBanner, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.post('/api/banner', newBanner);\r\n      setBanners([...banners, data]);\r\n      setNewBanner({ title: '', image: '', active: true, expiryDate: '' });\r\n    } catch (err) {\r\n      console.error('Error adding banner:', err);\r\n    }\r\n  };\r\n\r\n  const styles = {\r\n    container: {\r\n      padding: '20px',\r\n      backgroundColor: '#f9f9f9',\r\n      borderRadius: '8px',\r\n      boxShadow: '0 2px 10px rgba(0, 0, 0, 0.1)',\r\n      maxWidth: '600px',\r\n      margin: 'auto',\r\n    },\r\n    form: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      gap: '10px',\r\n      marginBottom: '20px',\r\n    },\r\n    label: {\r\n      fontWeight: 'bold',\r\n    },\r\n    input: {\r\n      padding: '8px',\r\n      borderRadius: '4px',\r\n      border: '1px solid #ccc',\r\n      fontSize: '16px',\r\n    },\r\n    button: {\r\n      padding: '10px 15px',\r\n      backgroundColor: '#007BFF',\r\n      color: '#fff',\r\n      border: 'none',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontSize: '16px',\r\n    },\r\n    bannerList: {\r\n      marginTop: '20px',\r\n      borderTop: '1px solid #ccc',\r\n      paddingTop: '10px',\r\n    },\r\n  };\r\n\r\n  if (loading) return <div>Loading banners...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2>Manage Banners</h2>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n        <div>\r\n          <label style={styles.label}>Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={newBanner.title}\r\n            onChange={handleChange}\r\n            required\r\n            style={styles.input}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label style={styles.label}>Image URL:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"image\"\r\n            value={newBanner.image}\r\n            onChange={handleChange}\r\n            required\r\n            style={styles.input}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label style={styles.label}>Active:</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"active\"\r\n            checked={newBanner.active}\r\n            onChange={(e) => setNewBanner({ ...newBanner, active: e.target.checked })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label style={styles.label}>Expiry Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"expiryDate\"\r\n            value={newBanner.expiryDate}\r\n            onChange={handleChange}\r\n            style={styles.input}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" style={styles.button}>Add Banner</button>\r\n      </form>\r\n\r\n      <div style={styles.bannerList}>\r\n        {banners.length === 0 ? (\r\n          <p>No banners available</p>\r\n        ) : (\r\n          banners.map((banner) => (\r\n            <BannerItem key={banner._id} banner={banner} onToggle={toggleBanner} />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminBannerScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,SAAS,EAAEC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,QAAQ,iBAAiB;AAAC;AAE1E,SAASC,iBAAiB,GAAG;EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC;IACzCe,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,IAAI;IACZC,UAAU,EAAE;EACd,CAAC,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACd,MAAMoB,YAAY,GAAG,YAAY;MAC/B,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,aAAa,CAAC;QAC/CC,UAAU,CAACF,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZX,QAAQ,CAAC,wBAAwB,CAAC;QAClCY,OAAO,CAACb,KAAK,CAACY,GAAG,CAAC;MACpB,CAAC,SAAS;QACRb,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDS,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI;MACF,MAAM;QAAEN;MAAK,CAAC,GAAG,MAAMnB,KAAK,CAAC0B,GAAG,CAAE,eAAcD,EAAG,SAAQ,CAAC;MAC5DJ,UAAU,CAACM,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAMA,MAAM,CAACC,GAAG,KAAKL,EAAE,GAAGN,IAAI,GAAGU,MAAO,CAAC,CAAC;IAC1E,CAAC,CAAC,OAAOP,GAAG,EAAE;MACZC,OAAO,CAACb,KAAK,CAAC,wBAAwB,EAAEY,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCtB,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAE,CAACqB,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,EAAE;IAClB,IAAI;MACF,MAAM;QAAElB;MAAK,CAAC,GAAG,MAAMnB,KAAK,CAACsC,IAAI,CAAC,aAAa,EAAE1B,SAAS,CAAC;MAC3DS,UAAU,CAAC,CAAC,GAAGM,OAAO,EAAER,IAAI,CAAC,CAAC;MAC9BN,YAAY,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,IAAI;QAAEC,UAAU,EAAE;MAAG,CAAC,CAAC;IACtE,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACb,KAAK,CAAC,sBAAsB,EAAEY,GAAG,CAAC;IAC5C;EACF,CAAC;EAED,MAAMiB,MAAM,GAAG;IACbC,SAAS,EAAE;MACTC,OAAO,EAAE,MAAM;MACfC,eAAe,EAAE,SAAS;MAC1BC,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAE,+BAA+B;MAC1CC,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE;IACV,CAAC;IACDC,IAAI,EAAE;MACJC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,GAAG,EAAE,MAAM;MACXC,YAAY,EAAE;IAChB,CAAC;IACDC,KAAK,EAAE;MACLC,UAAU,EAAE;IACd,CAAC;IACDC,KAAK,EAAE;MACLb,OAAO,EAAE,KAAK;MACdE,YAAY,EAAE,KAAK;MACnBY,MAAM,EAAE,gBAAgB;MACxBC,QAAQ,EAAE;IACZ,CAAC;IACDC,MAAM,EAAE;MACNhB,OAAO,EAAE,WAAW;MACpBC,eAAe,EAAE,SAAS;MAC1BgB,KAAK,EAAE,MAAM;MACbH,MAAM,EAAE,MAAM;MACdZ,YAAY,EAAE,KAAK;MACnBgB,MAAM,EAAE,SAAS;MACjBH,QAAQ,EAAE;IACZ,CAAC;IACDI,UAAU,EAAE;MACVC,SAAS,EAAE,MAAM;MACjBC,SAAS,EAAE,gBAAgB;MAC3BC,UAAU,EAAE;IACd;EACF,CAAC;EAED,IAAIvD,OAAO,EAAE,oBAAO;IAAA,UAAK;EAAkB;IAAA;IAAA;IAAA;EAAA,QAAM;EACjD,IAAIE,KAAK,EAAE,oBAAO;IAAA,UAAMA;EAAK;IAAA;IAAA;IAAA;EAAA,QAAO;EAEpC,oBACE;IAAK,KAAK,EAAE6B,MAAM,CAACC,SAAU;IAAA,wBAC3B;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eACvB;MAAM,QAAQ,EAAEJ,YAAa;MAAC,KAAK,EAAEG,MAAM,CAACQ,IAAK;MAAA,wBAC/C;QAAA,wBACE;UAAO,KAAK,EAAER,MAAM,CAACa,KAAM;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC1C;UACE,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,OAAO;UACZ,KAAK,EAAExC,SAAS,CAACE,KAAM;UACvB,QAAQ,EAAEiB,YAAa;UACvB,QAAQ;UACR,KAAK,EAAEQ,MAAM,CAACe;QAAM;UAAA;UAAA;UAAA;QAAA,QACpB;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAA,wBACE;UAAO,KAAK,EAAEf,MAAM,CAACa,KAAM;UAAA,UAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC9C;UACE,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,OAAO;UACZ,KAAK,EAAExC,SAAS,CAACG,KAAM;UACvB,QAAQ,EAAEgB,YAAa;UACvB,QAAQ;UACR,KAAK,EAAEQ,MAAM,CAACe;QAAM;UAAA;UAAA;UAAA;QAAA,QACpB;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAA,wBACE;UAAO,KAAK,EAAEf,MAAM,CAACa,KAAM;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC3C;UACE,IAAI,EAAC,UAAU;UACf,IAAI,EAAC,QAAQ;UACb,OAAO,EAAExC,SAAS,CAACI,MAAO;UAC1B,QAAQ,EAAGgB,CAAC,IAAKnB,YAAY,CAAC;YAAE,GAAGD,SAAS;YAAEI,MAAM,EAAEgB,CAAC,CAACG,MAAM,CAAC6B;UAAQ,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAC1E;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAA,wBACE;UAAO,KAAK,EAAEzB,MAAM,CAACa,KAAM;UAAA,UAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAQ,eAChD;UACE,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,YAAY;UACjB,KAAK,EAAExC,SAAS,CAACK,UAAW;UAC5B,QAAQ,EAAEc,YAAa;UACvB,KAAK,EAAEQ,MAAM,CAACe;QAAM;UAAA;UAAA;UAAA;QAAA,QACpB;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAQ,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAEf,MAAM,CAACkB,MAAO;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1D,eAEP;MAAK,KAAK,EAAElB,MAAM,CAACqB,UAAW;MAAA,UAC3BjC,OAAO,CAACsC,MAAM,KAAK,CAAC,gBACnB;QAAA,UAAG;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAI,GAE3BtC,OAAO,CAACC,GAAG,CAAEC,MAAM,iBACjB,QAAC,UAAU;QAAkB,MAAM,EAAEA,MAAO;QAAC,QAAQ,EAAEL;MAAa,GAAnDK,MAAM,CAACC,GAAG;QAAA;QAAA;QAAA;MAAA,QAC5B;IACF;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAzJQvB,iBAAiB;AAAA,KAAjBA,iBAAiB;AA2J1B,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}